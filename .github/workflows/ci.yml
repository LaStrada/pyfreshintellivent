name: Lint

on: pull_request

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-linting:
    name: Run linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: cp310
        with:
          python-version: "3.10.0"

      - run: echo '${{ steps.cp310.outputs.python-version }}'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true

  run-tests:
    name: Run linters and tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: cp310
        with:
          python-version: "3.8.0 - 3.10.0"

      - run: echo '${{ steps.cp310.outputs.python-version }}'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction
      
      - name: Run tests
        run: python -m poetry run pytest
